root ::= cells "\n"

identifier ::= [a-zA-Z] [a-zA-Z0-9]*
naturalNum ::= [1-9] [0-9]*
wholeNum ::= [0] | naturalNum
int ::= ("-" naturalNum) | wholeNum

width ::= "width:" naturalNum
val ::= "val:" int
inWidth ::= "inWidth:" naturalNum
outWidth ::= "outWidth:" naturalNum
class ::= "class:"
widthClass ::= class ("reg" | "lsh" | "rsh" | "add" | "sub" | "not" | "and" | "or" | "xor" | "gt" | "lt" | "eq" | "neq" | "ge" | "le" | "mul")
constClass ::= class "const"
constParams ::= width "," val
widthCtrlClass ::= class ("slice" | "pad")
widthCtrlParams ::= inWidth "," outWidth

primitive ::= (widthClass "," width) | (constClass "," constParams) | (widthCtrlClass "," widthCtrlParams)
cell ::= identifier "{" primitive "}"
cells ::= "cells{" cell+ "}"

