root ::= module "\n"

module ::= ports identifier ports body

# Ports
ports ::= "(" port+ ")"
port ::= (identifier | arrayDecl) ":" naturalNum ","

# Loops
for ::= "for" condition body

condition ::= "(" (enumerate) ")"
enumerate ::= identifier "," identifier ":enumerate(" (identifier | arrayLiteral) ")"

# Body
body ::= "{" statement+ "}"
statement ::= assignment | for
assignment ::= identifier "=" expression ";"
expression ::= literal | identifier | "(" expression ")" | (expression operator expression)
literal ::= integer | register | arrayLiteral

# Array
arrayDecl ::= identifier ("[" naturalNum "]")+
arrayIndexed ::= identifier ("[" wholeNum "]")+
arrayLiteral ::= "[" element* "]"
element ::= (identifier | arrayIndexed) ","

# Primitives
register ::= "r'" integer
operator ::= "+" | "-" | "*"
integer ::= ("-" naturalNum) | wholeNum
wholeNum ::= "0" | naturalNum
naturalNum ::= [1-9] [0-9]*
identifier ::= [a-zA-Z] [a-zA-Z0-9]*

